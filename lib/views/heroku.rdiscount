#### {% title "Krok po kroku odkrywamy Heroku" %}

# Krok po kroku odkrywamy Heroku

<blockquote>
 <p>
  {%= image_tag "/images/heroku-handles-headache.jpg", :alt => "[Heroku handles headache]" %}
 </p>
 <p class="author">źródło: <a href="http://robots.thoughtbot.com/post/159805997/heroku-wearing-suspenders">Heroku handles headache</a></p>
</blockquote>

Będziemy potrzebować gemów *heroku* i *taps*. Najpierw sprawdzamy,
czy są zainstalowane w systemie:

    gem list

Jeśli nie, to dopisujemy je do sekcji *development* w pliku Gemfile.

Następnie, kolejno, zakładamy darmowe konto na *heroku.com*.

Generujemy szablon aplikacji Rails3:

    rails new foo

Aplikację *foo* na heroku wdrażamy w trzech krokach:

1\. Tworzymy aplikację *foo*

    cd foo
    git init
    git add .
    git commit -m "pierwsza wersja"
    heroku create foo

Odpowiedź Heroku powinna być taka:

    Creating foo.... done
    http://foo.heroku.com/ | git@heroku.com:foo.git
    Git remote heroku added

**Uwaga:** jeśli na Heroku istnieje już aplikacja o takiej
nazwie, to musimy wymyśleć nową nazwę.

2\. Dodajemy klucz publiczny do swojego konta na Heroku
i wdrażamy aplikację *foo*:

    heroku keys:add ~/.ssh/id_rsa.pub
    git push heroku master

Stosujemy się do sugestii Heroku:

    bundle install --path=$HOME/.gems
    git add .
    git commit -m "dodano Gemfile.lock"
    git push heroku master

3\. Pozostałe rzeczy:

    heroku rake db:create

A te polecenia zostawiamy sobie na potem:

    heroku addons:add something?
    heroku rake db:migrate  # na razie chyba zbędne
    heroku db:push          # to też


## Kilka kont na heroku (newsletter, 01.2011)

Many of us have multiple Heroku accounts - one for personal projects,
one for work (or for each client, in some cases). Our very own David
Dollar wrote the
[heroku-accounts](https://github.com/ddollar/heroku-accounts)
plugin to help ease switching between them. No more shell scripts to
switch symbolic links! (What, you didn't do that? Guess it was just
me, then.)
